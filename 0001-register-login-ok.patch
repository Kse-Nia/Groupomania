From 518a3c3d85dea110c416452d7be81e7f09476069 Mon Sep 17 00:00:00 2001
From: kseniya <kseniyamudrakovadev@gmail.com>
Date: Sun, 16 Jan 2022 23:23:29 +0100
Subject: [PATCH 1/3] register / login ok ?

---
 backend/Controllers/user.controllers.js | 47 +++++++++++++++----------
 1 file changed, 29 insertions(+), 18 deletions(-)

diff --git a/backend/Controllers/user.controllers.js b/backend/Controllers/user.controllers.js
index 6f32bbf..3440977 100644
--- a/backend/Controllers/user.controllers.js
+++ b/backend/Controllers/user.controllers.js
@@ -3,31 +3,40 @@ const {
     Users
 } = require("../models");
 
+/* --- Partie register --- */
+
 exports.register = async (req, res) => {
     const {
         username,
         useremail,
         userpassword
     } = req.body;
-    bcrypt.hash(userpassword, 10).then((hash) => {
-        Users.create({
+    // on appelle la fun (async) de hachage + demande "saler" pass 10 fois; hash crypté du pass
+    bcrypt.hash(userpassword, 10)
+        .then(hash => {
+            // création de l'User 
+            const user = Users.create({
                 username: username,
                 useremail: useremail,
-                userpassword: hash,
-            })
-            .then(() => {
-                res.json("Enregistré");
-            })
-            .catch((err) => {
-                if (err) {
-                    res.status(400).json({
-                        error: err,
-                    });
-                }
+                userpassword: hash
             });
-    });
+            user.save()
+                .then(() => res.status(201).json({
+                    message: 'Compte utilisateur créé !'
+                }))
+
+                .catch(error => res.status(400).json({
+                    error
+                }));
+        })
+        .catch(error => res.status(500).json({
+            error
+        }));
 };
 
+
+/* --- Partie login --- */
+
 exports.login = async (req, res) => {
     const {
         username,
@@ -42,12 +51,13 @@ exports.login = async (req, res) => {
 
     const user = await Users.findOne({
             where: {
-                username: username
+                username: req.body.username
             }
-        }).then(user => {
+        })
+        .then(user => {
             if (!user) {
                 return res.status(401).json({
-                    error: 'Utilisateur non trouvé !'
+                    error: 'Utilisateur introuvable !'
                 });
             }
             bcrypt.compare(req.body.userpassword, user.userpassword)
@@ -58,7 +68,8 @@ exports.login = async (req, res) => {
                         });
                     }
                     res.status(200).json({
-                        userId: user.id
+                        userId: user._id,
+                        token: 'TOKEN'
                     });
                 })
                 .catch(error => res.status(500).json({
-- 
2.34.1

